# Values for Jenkins
jenkins:
  namespace: jenkins
  controller:
    jenkinsUrl: "http://jenkins.example.com"
    adminUser:
      enabled: true
      existingSecret: "jenkins-admin"
    additionalPlugins:
      - kubernetes:4253.v7700d91739e5
      - workflow-aggregator:600.vb_57cdd26fdd7
      - git:5.2.0
      - configuration-as-code:1810.v9b_c30a_249a_4c
      - gitlab-plugin:1.7.14
      - blueocean:1.27.13
      - workflow-multibranch:791.v28fb_f74dfca_e
      - login-theme:146.v64a_da_cf70ea_6
      - prometheus:773.v3b_62d8178eec
      - github-oauth:588.vf696a350572a_
    securityRealm:
      local:
        allowsSignup: false
        users:
          - id: "admin"
            password: "admin"
          - id: "project-managers"
            password: "password123"
    configScripts:
      my-casc-config: |
        jenkins:
          systemMessage: "Jenkins configured using Configuration as Code"
  agent:
    enabled: true
    namespace: default

# Values for Argo CD
argocd:
  enabled: true
  namespace: argocd
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  server:
    baseUrl: http://argocd-server:8090
    adminPassword: "909090"  # Placeholder of course
    service:
      name: argocd-server
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  controller:
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi
  dex:
    enabled: false
  rbac:
    create:
      groups:
        - role: project-readonly
          users:
            - joffe
            - joffe2
  repoServer:
    url: https://github.com/Joffe2001/playlist-app/

# Values for MongoDB
mongodb:
  enabled: true
  auth:
    enabled: true
    rootUsername: root
    rootPassword: rootroot
  persistence:
    enabled: true
    size: 10Gi
    accessModes:
      - ReadWriteOnce
    annotations: {}
    finalizers:
      - kubernetes.io/pvc-protection

# Values for Mongo Express
mongoexpress:
  enabled: true
  namespace: default
  env:
    ME_CONFIG_MONGODB_ADMINUSERNAME: root
    ME_CONFIG_MONGODB_ADMINPASSWORD: "rootroot"
    ME_CONFIG_MONGODB_SERVER: mongodb
    ME_CONFIG_MONGODB_PORT: 27017
    ME_CONFIG_MONGODB_AUTH_DATABASE: admin
    ME_CONFIG_BASICAUTH_USERNAME: "idojoffe"
  service:
    type: ClusterIP
    port: 8081
  livenessProbe:
    httpGet:
      path: /status
      port: 8081
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /status
      port: 8081
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

# Values for Prometheus
prometheus:
  enabled: true
  namespace: observation
  prometheus-node-exporter:
    rbac:
      pspEnabled: true
      pspAnnotations:
        seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default'
        apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
        seccomp.security.alpha.kubernetes.io/defaultProfileName:  'docker/default'
        apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 1Gi
  alertmanager:
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 250m
        memory: 512Mi

# Values for Grafana
grafana:
  enabled: true
  namespace: observation
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 250m
      memory: 512Mi
  persistence:
    enabled: true
    size: 10Gi
    accessModes:
      - ReadWriteOnce
    annotations: {}
    finalizers:
      - kubernetes.io/pvc-protection
  adminPassword: "909090" # Placeholder

# Values for Joffe App
joffeapp:
  replicas: 3
  image: 
    repository: joffe2001/playlist-app
    tag: latest
  resources:
    requests:
      cpu: "100m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"
  service:
    type: ClusterIP
    port: 5000
  env:
    MONGODB_URI: "mongodb://root:rootroot@mongodb:27017/"
    MONGODB_SERVER: "mongodb"
    MONGODB_PORT: 27017
    MONGODB_DATABASE: "project"
    MONGODB_USER: "root"
    MONGODB_PASSWORD: "rootroot"